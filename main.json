{"meta":{"version":"0.1.0","format":20,"date":1635428857462},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Collection\n\nUtility data structure used in Discord.js.\n","path":"docs/general/welcome.md"}}}},"classes":[{"name":"Collection","description":"A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has\nan ID, for significantly improved performance and ease-of-use.","extends":["Map<K, V>"],"construct":{"name":"constructor","params":[{"name":"entries","optional":true,"type":[[["null"," | "],["readonly"," "],["Array","<"],["readonly"," ["],["K",", "],["V","]>"]]]}],"returns":[[["Collection","<"],["K",", "],["V",">"]]]},"props":[{"name":"[toStringTag]","readonly":true,"type":[[["string"]]],"meta":{"line":135,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"constructor","type":[[["CollectionConstructor"]]],"meta":{"line":15,"file":"index.ts","path":"src"}},{"name":"size","readonly":true,"type":[[["number"]]],"meta":{"line":28,"file":"lib.es2015.collection.d.ts","path":"node_modules/typescript/lib"}},{"name":"[species]","scope":"static","readonly":true,"type":[[["MapConstructor"]]],"meta":{"line":317,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"default","scope":"static","readonly":true,"default":"Collection","type":[[["("],["typeof"," "],["Collection",")"]]],"meta":{"line":14,"file":"index.ts","path":"src"}}],"methods":[{"name":"[iterator]","description":"Returns an iterable of entries in the map.","returns":[[["IterableIterator","<["],["K",", "],["V","]>"]]]},{"name":"at","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the item at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the element to obtain","optional":true,"default":"0","type":[[["number"]]]}],"returns":[[["undefined"," | "],["V"]]],"meta":{"line":151,"file":"index.ts","path":"src"}},{"name":"clear","description":"Identical to [Map.clear()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear).\nRemoves all elements from the collection.","returns":[[["void"]]],"meta":{"line":60,"file":"index.ts","path":"src"}},{"name":"clone","description":"Creates an identical shallow copy of this collection.","see":[],"examples":["const newColl = someColl.clone();\n"],"abstract":false,"deprecated":false,"emits":[],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":513,"file":"index.ts","path":"src"}},{"name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","see":[],"examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"collections","description":"Collections to merge","type":[[["Array","<"],["Collection","<"],["K",", "],["V",">>"]]]}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":522,"file":"index.ts","path":"src"}},{"name":"delete","description":"Identical to [Map.delete()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete).\nDeletes an element from the collection.","params":[{"name":"key","description":"The key to delete from the collection","type":[[["K"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if the element was removed, `false` if the element does not exist.\n","meta":{"line":52,"file":"index.ts","path":"src"}},{"name":"difference","description":"The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.","params":[{"name":"other","description":"The other Collection to filter against","type":[[["Collection","<"],["K",", "],["V",">"]]]}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":588,"file":"index.ts","path":"src"}},{"name":"each","description":"Identical to\n[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\nbut returns the collection instead of undefined.","see":[],"examples":["\ncollection\n .each(user => console.log(user.username))\n .filter(user => user.bot)\n .each(user => console.log(user.username));\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute for each element","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["void"]]]}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":484,"file":"index.ts","path":"src"}},{"name":"entries","description":"Returns an iterable of key, value pairs for every entry in the map.","returns":[[["IterableIterator","<["],["K",", "],["V","]>"]]]},{"name":"equals","description":"Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.","params":[{"name":"collection","description":"Collection to compare with","type":[[["Collection","<"],["K",", "],["V",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"Whether the collections have identical contents\n","meta":{"line":537,"file":"index.ts","path":"src"}},{"name":"every","description":"Checks if all items passes a test. Identical in behavior to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","see":[],"examples":["collection.every(user => !user.bot);\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["this"," "],["is"," "],["Collection","<"],["K2",", "],["V",">"]]],"meta":{"line":418,"file":"index.ts","path":"src"}},{"name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","see":[],"examples":["collection.filter(user => user.username === 'Bob');\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["Collection","<"],["K2",", "],["V",">"]]],"meta":{"line":276,"file":"index.ts","path":"src"}},{"name":"find","description":"Searches for a single item where the given function returns a truthy value. This behaves like\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n<warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>","see":[],"examples":["collection.find(user => user.username === 'Bob');\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["value"," "],["is"," "],["V2"]]]}],"returns":[[["undefined"," | "],["V2"]]],"meta":{"line":213,"file":"index.ts","path":"src"}},{"name":"findKey","description":"Searches for the key of a single item where the given function returns a truthy value. This behaves like\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\nbut returns the key rather than the positional index.","see":[],"examples":["collection.findKey(user => user.username === 'Bob');\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"The function to test with (should return boolean)","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["undefined"," | "],["K2"]]],"meta":{"line":236,"file":"index.ts","path":"src"}},{"name":"first","description":"Obtains the first value(s) in this collection.","returns":[[["undefined"," | "],["V"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the end if amount is negative\n","meta":{"line":87,"file":"index.ts","path":"src"}},{"name":"firstKey","description":"Obtains the first key(s) in this collection.","returns":[[["undefined"," | "],["K"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the end if\namount is negative\n","meta":{"line":103,"file":"index.ts","path":"src"}},{"name":"flatMap","description":"Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n[Array.flatMap()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap).","see":[],"examples":["collection.flatMap(guild => guild.members.cache);\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces a new Collection","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["Collection","<"],["K",", "],["T",">"]]]}],"returns":[[["Collection","<"],["K",", "],["T",">"]]],"meta":{"line":349,"file":"index.ts","path":"src"}},{"name":"forEach","params":[{"name":"callbackfn","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["map",": "],["Map","<"],["K",", "],["V",">) => "],["void"]]]},{"name":"thisArg","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]]},{"name":"get","description":"Identical to [Map.get()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get).\nGets an element with the specified key, and returns its value, or `undefined` if the element does not exist.","params":[{"name":"key","description":"The key to get from this collection","type":[[["K"]]]}],"returns":[[["undefined"," | "],["V"]]],"meta":{"line":22,"file":"index.ts","path":"src"}},{"name":"has","description":"Identical to [Map.has()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has).\nChecks if an element exists in the collection.","params":[{"name":"key","description":"The key of the element to check for","type":[[["K"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if the element exists, `false` if it does not exist.\n","meta":{"line":42,"file":"index.ts","path":"src"}},{"name":"hasAll","description":"Checks if all of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","type":[[["Array","<"],["K",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if all of the elements exist, `false` if at least one does not exist.\n","meta":{"line":69,"file":"index.ts","path":"src"}},{"name":"hasAny","description":"Checks if any of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for","type":[[["Array","<"],["K",">"]]]}],"returns":[[["boolean"]]],"returnsDescription":"`true` if any of the elements exist, `false` if none exist.\n","meta":{"line":78,"file":"index.ts","path":"src"}},{"name":"intersect","description":"The intersect method returns a new structure containing items where the keys are present in both original structures.","params":[{"name":"other","description":"The other Collection to filter against","type":[[["Collection","<"],["K",", "],["V",">"]]]}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":576,"file":"index.ts","path":"src"}},{"name":"keyAt","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the key at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"name":"index","description":"The index of the key to obtain","optional":true,"default":"0","type":[[["number"]]]}],"returns":[[["undefined"," | "],["K"]]],"meta":{"line":163,"file":"index.ts","path":"src"}},{"name":"keys","description":"Returns an iterable of keys in the map","returns":[[["IterableIterator","<"],["K",">"]]]},{"name":"last","description":"Obtains the last value(s) in this collection.","returns":[[["undefined"," | "],["V"]]],"returnsDescription":"A single value if no amount is provided or an array of values, starting from the start if\namount is negative\n","meta":{"line":119,"file":"index.ts","path":"src"}},{"name":"lastKey","description":"Obtains the last key(s) in this collection.","returns":[[["undefined"," | "],["K"]]],"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the start if\namount is negative\n","meta":{"line":135,"file":"index.ts","path":"src"}},{"name":"map","description":"Maps each item to another value into an array. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.map(user => user.tag);\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new array, taking three arguments","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["T"]]]}],"returns":[[["Array","<"],["T",">"]]],"meta":{"line":366,"file":"index.ts","path":"src"}},{"name":"mapValues","description":"Maps each item to another value into a collection. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":["collection.mapValues(user => user.tag);\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function that produces an element of the new collection, taking three arguments","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["T"]]]}],"returns":[[["Collection","<"],["K",", "],["T",">"]]],"meta":{"line":385,"file":"index.ts","path":"src"}},{"name":"partition","description":"Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.","see":[],"examples":["const [big, small] = collection.partition(guild => guild.memberCount > 250);\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["key"," "],["is"," "],["K2"]]]}],"returns":[[["["],["Collection","<"],["K2",", "],["V",">, "],["Collection","<"],["Exclude","<"],["K",", "],["K2",">, "],["V",">]"]]],"meta":{"line":304,"file":"index.ts","path":"src"}},{"name":"random","description":"Obtains unique random value(s) from this collection.","returns":[[["undefined"," | "],["V"]]],"returnsDescription":"A single value if no amount is provided or an array of values\n","meta":{"line":174,"file":"index.ts","path":"src"}},{"name":"randomKey","description":"Obtains unique random key(s) from this collection.","returns":[[["undefined"," | "],["K"]]],"returnsDescription":"A single key if no amount is provided or an array\n","meta":{"line":191,"file":"index.ts","path":"src"}},{"name":"reduce","description":"Applies a function to produce a single value. Identical in behavior to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","see":[],"examples":["collection.reduce((acc, guild) => acc + guild.memberCount, 0);\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`","type":[[["("],["accumulator",": "],["T",", "],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["T"]]]},{"name":"initialValue","description":"Starting value for the accumulator","optional":true,"type":[[["T"]]]}],"returns":[[["T"]]],"meta":{"line":446,"file":"index.ts","path":"src"}},{"name":"set","description":"Identical to [Map.set()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set).\nSets a new element in the collection with the specified key and value.","params":[{"name":"key","description":"The key of the element to add","type":[[["K"]]]},{"name":"value","description":"The value of the element to add","type":[[["V"]]]}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":32,"file":"index.ts","path":"src"}},{"name":"some","description":"Checks if there exists an item that passes a test. Identical in behavior to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","see":[],"examples":["collection.some(user => user.discriminator === '0000');\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["boolean"]]]}],"returns":[[["boolean"]]],"meta":{"line":401,"file":"index.ts","path":"src"}},{"name":"sort","description":"The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.","optional":true,"default":"Collection.defaultSort","type":[[["Comparator","<"],["K",", "],["V",">"]]]}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":558,"file":"index.ts","path":"src"}},{"name":"sorted","description":"The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":["collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"compareFunction","description":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.","optional":true,"default":"Collection.defaultSort","type":[[["Comparator","<"],["K",", "],["V",">"]]]}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":608,"file":"index.ts","path":"src"}},{"name":"sweep","description":"Removes items that satisfy the provided filter function.","params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":[[["("],["value",": "],["V",", "],["key",": "],["K",", "],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["boolean"]]]}],"returns":[[["number"]]],"returnsDescription":"The number of removed entries\n","meta":{"line":257,"file":"index.ts","path":"src"}},{"name":"tap","description":"Runs a function on the collection and returns the collection.","see":[],"examples":["\ncollection\n .tap(coll => console.log(coll.size))\n .filter(user => user.bot)\n .tap(coll => console.log(coll.size))\n"],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"fn","description":"Function to execute","type":[[["("],["collection",": "],["Collection","<"],["K",", "],["V",">) => "],["void"]]]}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":501,"file":"index.ts","path":"src"}},{"name":"toJSON","returns":[[["Array","<"],["V",">"]]],"meta":{"line":612,"file":"index.ts","path":"src"}},{"name":"values","description":"Returns an iterable of values in the map","returns":[[["IterableIterator","<"],["V",">"]]]},{"name":"defaultSort","scope":"static","access":"private","params":[{"name":"firstValue","type":[[["V"]]]},{"name":"secondValue","type":[[["V"]]]}],"returns":[[["number"]]],"meta":{"line":617,"file":"index.ts","path":"src"}}],"meta":{"line":13,"file":"index.ts","path":"src"}}],"typedefs":[{"name":"CollectionConstructor","meta":{"line":1,"file":"index.ts","path":"src"},"props":[{"name":"constructor"},{"name":"[species]","type":[[["CollectionConstructor"]]]},{"name":"prototype","type":[[["Collection","<"],["unknown",", "],["unknown",">"]]]}]},{"name":"Comparator","type":[[["("],["firstValue",": "],["V",", "],["secondValue",": "],["V",", "],["firstKey",": "],["K",", "],["secondKey",": "],["K",") => "],["number"]]],"meta":{"line":622,"file":"index.ts","path":"src"},"params":[{"name":"firstValue","type":[[["V"]]]},{"name":"secondValue","type":[[["V"]]]},{"name":"firstKey","type":[[["K"]]]},{"name":"secondKey","type":[[["K"]]]}],"returns":[[["number"]]]}]}